//
//  PopularTVShowsPresenter.swift
//  TVShows
//
//  Created by Vedran Burojevic on 06/05/16.
//  Copyright (c) 2016 1337code. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import RxSwift
import NSObject_Rx

final class PopularTVShowsPresenter: NSObject {

    // MARK: - Public properties -

    let loadingObservable: Observable<Bool>
    let contentChangesObservable: Observable<[APITVShow]>
    let errorObservable: Observable<String>
    
    // MARK: - Private properties -

    private unowned var _view: PopularTVShowsViewInterface
    private var _interactor: PopularTVShowsInteractor
    private var _wireframe: PopularTVShowsWireframeInterface
    private let loading = Variable(false)
    private let tvShows = Variable([APITVShow]())
    private let errorSubject = PublishSubject<String>()
    
    // MARK: - Lifecycle -
    init (wireframe: PopularTVShowsWireframeInterface, view: PopularTVShowsViewInterface, interactor: PopularTVShowsInteractor) {
        _wireframe = wireframe
        _view = view
        _interactor = interactor
        contentChangesObservable = tvShows.asObservable()
        errorObservable = errorSubject.asObservable()
        loadingObservable = loading.asObservable()
    }
    
}

extension PopularTVShowsPresenter: PopularTVShowsViewDelegateInterface {

    func titleText() -> String {
        return "Popular TV Shows"
    }

    func viewDidLoad() {
        loading.value = true

        _interactor
        .loadPopularTVShows()
        .subscribe(onSuccess: { tvShows in
            self.tvShows.value = tvShows
            self.loading.value = false
            }, onFailure: { error in
                print(error)
                self.loading.value = false
        })
    }

    func didSelectNavigationAction(action: PopularTVShowsNavigationAction) {
        _wireframe.performNavigationAction(action)
    }
}
