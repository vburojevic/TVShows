//
//  PopularTVShowsViewController.swift
//  TVShows
//
//  Created by Vedran Burojevic on 06/05/16.
//  Copyright (c) 2016 1337code. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import RxSwift
import RxCocoa
import NSObject_Rx

// MARK: -  PopularTVShows View Controller -
final class PopularTVShowsViewController: UIViewController, Progressable {

    // MARK: - IBOutlets -

    @IBOutlet weak var tableView: UITableView!
    
    // MARK: - Public properties-

    var presenter: PopularTVShowsViewDelegateInterface!
    
    // MARK: - View lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()

        configureUI()
        bindPresenter()
        presenter.viewDidLoad()
    }

    // MARK: - Private functions -

    func configureUI() {
        // Title
        self.title = presenter.titleText()
        

        // Table view
        tableView.registerNib(UINib(nibName: R.nib.tVShowTableViewCell.identifier, bundle: nil), forCellReuseIdentifier: R.reuseIdentifier.tVShowTableViewCell.identifier)
        tableView.tableFooterView = UIView()
    }

    func bindPresenter() {

        presenter
            .loadingObservable
            .subscribeNext { loading in
                if loading {
                    self.showLoading()
                } else {
                    self.hideLoading()
                }
            }
            .addDisposableTo(rx_disposeBag)

        presenter
            .contentChangesObservable
            .bindTo(tableView.rx_itemsWithCellIdentifier(R.reuseIdentifier.tVShowTableViewCell.identifier)) { (row, item, cell) in
                guard let cell = cell as? TVShowTableViewCell else {
                    fatalError("Cell is not of type \(R.reuseIdentifier.tVShowTableViewCell.identifier)")
                }
                cell.configure(tvShowCellItem: item)
            }
            .addDisposableTo(rx_disposeBag)

        presenter
            .errorObservable
            .subscribeNext { error in
                let alertController = UIAlertController(title: error.title, message: error.message, preferredStyle: .Alert)

                let cancelAction = UIAlertAction(title: "OK", style: .Cancel, handler: nil)
                alertController.addAction(cancelAction)

                self.presentViewController(alertController, animated: true, completion: nil)
            }
            .addDisposableTo(rx_disposeBag)
    }
}

// MARK: - Extensions -

extension PopularTVShowsViewController: PopularTVShowsViewInterface {
}
